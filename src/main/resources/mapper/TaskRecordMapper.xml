<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eservice.api.dao.TaskRecordMapper">
    <resultMap id="BaseResultMap" type="com.eservice.api.model.task_record.TaskRecord">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="process_record_id" jdbcType="INTEGER" property="processRecordId"/>
        <result column="node_key" jdbcType="TINYINT" property="nodeKey"/>
        <result column="leader" jdbcType="VARCHAR" property="leader"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="install_begin_time" jdbcType="TIMESTAMP" property="installBeginTime"/>
        <result column="install_end_time" jdbcType="TIMESTAMP" property="installEndTime"/>
        <result column="quality_begin_time" jdbcType="TIMESTAMP" property="qualityBeginTime"/>
        <result column="quality_end_time" jdbcType="TIMESTAMP" property="qualityEndTime"/>
        <result column="worker_list" jdbcType="LONGVARCHAR" property="workerList"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="wait_timespan" jdbcType="INTEGER" property="waitTimespan"/>
        <result column="cmt_feedback" jdbcType="VARCHAR" property="cmtFeedback"/>

    </resultMap>

    <resultMap id="TaskRecordExpiredMap" type="com.eservice.api.model.task_record.TaskRecordExpired">
        <result column="expired_count" jdbcType="INTEGER" property="expiredCount"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="date_year" jdbcType="INTEGER" property="dateYear"/>
        <result column="date_month" jdbcType="INTEGER" property="dateMonth"/>
        <result column="date_day" jdbcType="INTEGER" property="dateDay"/>
    </resultMap>
    <resultMap id="TaskReportMap" type="com.eservice.api.model.task_record.TaskReport">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="process_record_id" jdbcType="INTEGER" property="processRecordId"/>
        <result column="node_key" jdbcType="TINYINT" property="nodeKey"/>
        <result column="leader" jdbcType="VARCHAR" property="leader"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="install_begin_time" jdbcType="TIMESTAMP" property="installBeginTime"/>
        <result column="install_end_time" jdbcType="TIMESTAMP" property="installEndTime"/>
        <result column="quality_begin_time" jdbcType="TIMESTAMP" property="qualityBeginTime"/>
        <result column="quality_end_time" jdbcType="TIMESTAMP" property="qualityEndTime"/>
        <result column="worker_list" jdbcType="LONGVARCHAR" property="workerList"/>
        <result column="nameplate" jdbcType="VARCHAR" property="nameplate"/>
        <result column="order_num" jdbcType="VARCHAR" property="orderNum"/>
    </resultMap>
    <!--根据user.account查 task_record OK-->
    <select id="selectTaskReocords" resultMap="BaseResultMap">
  select
  tr.*
  from task_record tr
  join task on task.task_name = tr.task_name
  join install_group  on install_group.id = task.group_id
  join user on user.group_id = install_group.id
  where user.account  = #{userAccount}
  </select>

    <resultMap id="taskPlanResultMap" type="com.eservice.api.model.task_plan.TaskPlan">
        <!--mybatis功能：数据库字段名称中下划线 转换为类中的驼峰大写，符合这个规则时不需要一一写明，只需要写不符合规则的那些。所以之前写错了也能返回OK的值-->
        <!--<id column="id" jdbcType="INTEGER" property="id" />-->
        <!--<result column="task_record_id" jdbcType="INTEGER" property="taskRecordId" />-->
        <!--<result column="plan_time" jdbcType="TIMESTAMP" property="planTime" />-->
        <!--<result column="user_id" jdbcType="INTEGER" property="userId" />-->
        <!--<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />-->
        <!--<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />-->
    </resultMap>

    <!--根据 taskId查task plan-->
    <select id="selectTaskPlans" resultMap="taskPlanResultMap">
    select
    tp.*
    from task_plan tp
    join task_record  tr on tr.id = tp.task_record_id
    where tr.id = #{taskRecordId}
  </select>

    <resultMap id="TaskRecordDetail" type="com.eservice.api.model.task_record.TaskRecordDetail">
        <id column="id" property="id"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="process_record_id" jdbcType="INTEGER" property="processRecordId"/>
        <result column="node_key" jdbcType="TINYINT" property="nodeKey"/>
        <result column="leader" jdbcType="VARCHAR" property="leader"/>
        <result column="taskRecord_status" jdbcType="TINYINT" property="status"/>
        <result column="install_begin_time" jdbcType="TIMESTAMP" property="installBeginTime"/>
        <result column="install_end_time" jdbcType="TIMESTAMP" property="installEndTime"/>
        <result column="quality_begin_time" jdbcType="TIMESTAMP" property="qualityBeginTime"/>
        <result column="quality_end_time" jdbcType="TIMESTAMP" property="qualityEndTime"/>
        <result column="worker_list" jdbcType="LONGVARCHAR" property="workerList"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="wait_timespan" jdbcType="INTEGER" property="waitTimespan"/>
        <result column="cmt_feedback" jdbcType="VARCHAR" property="cmtFeedback"/>

        <result column="electric_trim" jdbcType="VARCHAR" property="electricTrim"/>
        <result column="axle_jump" jdbcType="VARCHAR" property="axleJump"/>

        <association javaType="com.eservice.api.model.process_record.ProcessRecord" property="processRecord">
            <id column="process_record_id_in_association" property="id"/>
            <result column="machine_id" jdbcType="INTEGER" property="machineId"/>
            <result column="process_id" jdbcType="INTEGER" property="processId"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
            <result column="link_data" jdbcType="LONGVARCHAR" property="linkData"/>
            <result column="node_data" jdbcType="LONGVARCHAR" property="nodeData"/>
        </association>
        <association javaType="com.eservice.api.model.machine.Machine" property="machine">
            <id column="machine_id1" property="id"/>
            <result column="order_id" property="orderId"/>
            <result column="machine_strid" jdbcType="VARCHAR" property="machineStrId"/>
            <result column="nameplate" jdbcType="VARCHAR" property="nameplate"/>
            <result column="location" jdbcType="VARCHAR" property="location"/>
            <result column="machine_status" jdbcType="TINYINT" property="status"/>
            <result column="machine_type" jdbcType="INTEGER" property="machineType"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
            <result column="installed_time" jdbcType="TIMESTAMP" property="installedTime"/>
            <result column="ship_time" jdbcType="TIMESTAMP" property="shipTime"/>
            <result column="is_urgent" jdbcType="TINYINT" property="isUrgent"/>
            <result column="machine_framework_create_time" jdbcType="TIMESTAMP" property="machineFrameworkCreateTime"/>
        </association>
        <association javaType="com.eservice.api.model.machine_order.MachineOrder" property="machineOrder">
            <id column="order_num" jdbcType="VARCHAR" property="orderNum"/>
            <id column="machine_order_id" jdbcType="INTEGER" property="id"/>
            <result column="original_order_id" jdbcType="INTEGER" property="originalOrderId"/>
            <result column="order_detail_id" jdbcType="INTEGER" property="orderDetailId"/>
            <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
            <result column="contract_id" jdbcType="VARCHAR" property="contractId"/>
            <!--<result column="customer" jdbcType="VARCHAR" property="customer" />-->
            <result column="country" jdbcType="VARCHAR" property="country"/>
            <result column="brand" jdbcType="VARCHAR" property="brand"/>
            <result column="mo_machine_type" jdbcType="INTEGER" property="machineType"/>
            <result column="needle_num" jdbcType="INTEGER" property="needleNum"/>
            <result column="head_num" jdbcType="INTEGER" property="headNum"/>
            <result column="head_distance" jdbcType="INTEGER" property="headDistance"/>
            <result column="x_distance" jdbcType="VARCHAR" property="xDistance"/>
            <result column="y_distance" jdbcType="VARCHAR" property="yDistance"/>
            <result column="package_method" jdbcType="VARCHAR" property="packageMethod"/>
            <result column="machine_num" jdbcType="TINYINT" property="machineNum"/>
            <result column="machine_price" jdbcType="VARCHAR" property="machinePrice"/>
            <result column="contract_ship_date" jdbcType="DATE" property="contractShipDate"/>
            <result column="plan_ship_date" jdbcType="DATE" property="planShipDate"/>
            <result column="sellman" jdbcType="VARCHAR" property="sellman"/>
            <result column="machineOrder_status" jdbcType="TINYINT" property="status"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
            <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
            <result column="mark" jdbcType="LONGVARCHAR" property="mark"/>
            <result column="all_urgent" jdbcType="TINYINT" property="allUrgent"/>

            <result column="order_type" jdbcType="VARCHAR" property="orderType"/>
            <result column="gross_profit" jdbcType="VARCHAR" property="grossProfit"/>
            <result column="business_expense" jdbcType="VARCHAR" property="businessExpense"/>
            <result column="warranty_fee" jdbcType="VARCHAR" property="warrantyFee"/>
            <result column="machine_frame_length" jdbcType="VARCHAR" property="machineFrameLength"/>
            <result column="machine_head_style" jdbcType="VARCHAR" property="machineHeadStyle"/>

            <result column="container_size" jdbcType="VARCHAR" property="containerSize"/>
            <result column="profit_margin" jdbcType="VARCHAR" property="profitMargin"/>
            <result column="machine_weight" jdbcType="VARCHAR" property="machineWeight"/>
            <result column="finance_remark" jdbcType="VARCHAR" property="financeRemark"/>
            <result column="responsible_do_fee" jdbcType="VARCHAR" property="responsibleDoFee"/>
            <result column="delivery_fee" jdbcType="VARCHAR" property="deliveryFee"/>

        </association>
        <association javaType="com.eservice.api.model.order_loading_list.OrderLoadingList" property="orderLoadingList">
            <id column="order_loading_list_id" property="id"/>
            <result column="order_id" jdbcType="INTEGER" property="orderId"/>
            <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
            <result column="type" jdbcType="TINYINT" property="type"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        </association>
        <association javaType="com.eservice.api.model.task_plan.TaskPlan" property="taskPlan">
            <id column="task_plan_id" jdbcType="INTEGER" property="id"/>
            <result column="task_record_id" jdbcType="INTEGER" property="taskRecordId"/>
            <result column="plan_time" jdbcType="TIMESTAMP" property="planTime"/>
            <result column="plan_type" jdbcType="TIMESTAMP" property="planType"/>
            <result column="deadline" jdbcType="TIMESTAMP" property="deadline"/>
            <result column="user_id" jdbcType="INTEGER" property="userId"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        </association>
        <association javaType="com.eservice.api.model.task.Task" property="task">
            <id column="task_id" jdbcType="INTEGER" property="id"/>
            <result column="quality_user_id" jdbcType="INTEGER" property="qualityUserId"/>
            <result column="group_id" jdbcType="INTEGER" property="groupId"/>
            <result column="standard_minutes" jdbcType="INTEGER" property="standardMinutes" />
        </association>

        <association javaType="com.eservice.api.model.machine_type.MachineType" property="machineType">
            <id column="machineTypeID" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
        </association>
    </resultMap>
    <!--根据 taskId查task record, process record, machine, machine_order-->
    <select id="selectTaskRecordDetail" resultMap="TaskRecordDetail">
        SELECT
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1, m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*
        FROM
        task_record tr
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        left join order_loading_list oll on oll.order_id = mo.id
        where tr.id = #{taskRecordId}
    </select>

    <select id="searchTaskRecordDetail" resultMap="TaskRecordDetail">
        SELECT
        tr.id, tr.task_name, tr.leader, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.cmt_feedback,
        m.status machine_status, m.nameplate,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.order_num, mo.*,
        task.standard_minutes
        FROM
        task_record tr
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        join task on task.task_name = tr.task_name
        where 1=1
        <if test="taskRecordId != null and taskRecordId != '' ">
          and tr.id = #{taskRecordId}
        </if>
        <if test="taskName != null and taskName !='' ">
          and task.task_name = #{taskName}
        </if>
        <if test="machineOrderNumber != null and machineOrderNumber !='' ">
          and mo.order_num like CONCAT('%','${machineOrderNumber}','%' )
        </if>
        <if test="queryStartTime!=null and queryStartTime != '' ">
          and DATE_FORMAT(tr.install_begin_time,'%Y-%m-%d') &gt;= #{queryStartTime}
        </if>
        <if test="queryFinishTime != null and queryFinishTime != '' ">
          and DATE_FORMAT(tr.install_end_time,'%Y-%m-%d') &lt;= #{queryFinishTime}
        </if>
        <if test="nameplate != null and nameplate !='' ">
            and m.nameplate like CONCAT('%','${nameplate}','%' )
        </if>
    </select>

    <select id="selectAllTaskRecordDetail" resultMap="TaskRecordDetail">
       SELECT
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1, m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*
        FROM
        task_record tr
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        join task_plan tp on tr.id = tp.task_record_id
        left join order_loading_list oll on oll.order_id = mo.id
--         where tr.status !=0 and tr.status !=1 and tr.status !=6  and tr.status !=4
--  不再显示 已安装完成的机器，否则会数据量过大（机器数量到一定程度后），造成 org.apache.catalina.connector.ClientAbortException: java.io.IOException: Broken pipe
        where tr. STATUS = 2 || tr. STATUS = 3 ||tr. STATUS = 5 ||tr. STATUS = 7||tr. STATUS = 8||tr. STATUS = 9
        ORDER BY location, order_num
  </select>

    <select id="selectAllInstallTaskRecordDetailByUserAccountChuChangJianCe" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1,m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*,
        tp.id task_plan_id,tp.*,
        t.id task_id, t.quality_user_id,t.group_id

        from task_record tr
        join task_plan tp on tp.task_record_id = tr.id
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        left join order_loading_list oll on oll.order_id = mo.id

        join task t on t.task_name = tr.task_name
        join install_group  on install_group.id = t.group_id
        join user on user.group_id = install_group.id
        where user.account  = #{userAccount}
--         2021-05-14 新质检暂时不启用，所以改回原先状态，不显示4、5
--         and (tr.status=2 or tr.status=3 or tr.status=4 or tr.status=5 or tr.status=7 or tr.status=8 )
        and (tr.status=2 or tr.status=3   or tr.status=7 or tr.status=8)
        AND m.`status` != 8
        ORDER BY location, order_num
    </select>

    <!--3期质检，安装完成后状态为安装完成，所以4、5不需要了-->
    <!--and (tr.status=2 or tr.status=3 or tr.status=4 or tr.status=5 or tr.status=7 or tr.status=8)-->
    <select id="selectAllInstallTaskRecordDetailByUserAccount" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1,m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*,
        tp.id task_plan_id,tp.*,
        t.id task_id, t.quality_user_id,t.group_id

        from task_record tr
        join task_plan tp on tp.task_record_id = tr.id
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        left join order_loading_list oll on oll.order_id = mo.id

        join task t on t.task_name = tr.task_name
        join install_group  on install_group.id = t.group_id
        join user on user.group_id = install_group.id
        where user.account  = #{userAccount}
        and (tr.status=2 or tr.status=3   or tr.status=7 or tr.status=8)
        ORDER BY location, order_num
    </select>

    <select id="selectAllQaTaskRecordDetailByUserAccount" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1, m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*,
        t.id task_id, t.quality_user_id,t.group_id

        from task_record tr
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        left join order_loading_list oll on oll.order_id = mo.id

        join task t on t.task_name = tr.task_name

--         新的质检方案，质检不再指定质检人
--         join user on user.id = t.quality_user_id
        where
        1=1
        <if test="userAccount != null and userAccount != ''">
            and   user.account = #{userAccount}
        </if>

      -- 4:安装完成，5: 质检中 8:质检异常
        and (tr.status=4 or tr.status=5 or tr.status=8)
  </select>
    <select id="selectNotPlanedTaskRecord" resultMap="BaseResultMap">
        SELECT tr.* FROM task_record tr
        LEFT JOIN task_plan tp ON tr.id = tp.task_record_id
        WHERE tr.process_record_id = #{process_record_id} AND tp.id IS null
  </select>

    <select id="getTaskRecordData" resultMap="BaseResultMap">
        select
        *
        from task_record
        WHERE 1=1
        <if test="id != null and id != ''">
            and id=#{id}
        </if>

        <if test="processRecordId != null and processRecordId != ''">
            and process_record_id=#{processRecordId}
        </if>
    </select>

    <delete id="deleteTaskRecordByCondition" parameterType="com.eservice.api.model.task_record.TaskRecord">
        <if test="id != null and id != ''">
            DELETE FROM task_record WHERE id=#{id}
        </if>
        <if test="processRecordId != null and processRecordId != ''">
            DELETE FROM task_record WHERE process_record_id=#{processRecordId}
            <if test="nodeKey != null">
                AND node_key=#{nodeKey}
            </if>
            <if test="status != null">
                AND `status`=#{status}
            </if>
        </if>
    </delete>

    <select id="selectPlanedTaskRecordsByFuzzy" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name,tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time,
        tr.install_end_time,tr.quality_begin_time, tr.quality_end_time, 
        m.machine_strid,m.nameplate,m.machine_type,m.is_urgent,
        mo.order_num,mo.contract_ship_date, mo.plan_ship_date,mo.all_urgent,
        tp.*, tp.id task_plan_id
        from task_record tr
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        JOIN task_plan tp on tr.id = tp.task_record_id
        join task on task.task_name = tr.task_name
        WHERE 1 = 1
        <if test="machine_strid != null and machine_strid != ''">
            and m.machine_strid like CONCAT('%','${machine_strid}','%' )
        </if>
        <if test="order_num != null and order_num != ''">
            and mo.order_num like CONCAT('%','${order_num}','%' )
        </if>
        <if test="nameplate != null and nameplate != ''">
            and m.nameplate like CONCAT('%','${nameplate}','%' )
        </if>
        <if test="install_status != null and install_status != ''">
            <if test="install_status == 1">
                and tr.status = 6
            </if>
            <if test="install_status == 2">
                and tr.status != 6
            </if>
        </if>
        <if test="task_name != null and task_name != ''">
            and tr.task_name like CONCAT('%','${task_name}','%' )
        </if>
        <if test="machine_type != null and machine_type != ''">
            and m.machine_type=#{machine_type}
        </if>
        <!-- 查询 建立时间plan_time在传入的参数 query_start_time 和 query_finish_time 之间的订单 -->
        <if test="query_start_time!=null and query_start_time != '' ">
            and DATE_FORMAT(tp.plan_time,'%Y-%m-%d') &gt;= #{query_start_time}
        </if>
        <if test="query_finish_time!=null and query_finish_time != '' ">
            and DATE_FORMAT(tp.plan_time,'%Y-%m-%d') &lt;= #{query_finish_time}
        </if>
        ORDER By tp.plan_time DESC,tp.update_time DESC
    </select>
    <select id="selectPlanedTaskRecords" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name,tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time,
        tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        m.machine_strid,m.nameplate,m.machine_type,m.is_urgent,
        mo.order_num,mo.contract_ship_date, mo.plan_ship_date,mo.all_urgent,
        tp.plan_time, tp.plan_type, tp.deadline,tp.id task_plan_id
        from task_record tr
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        JOIN task_plan tp on tr.id = tp.task_record_id
        join task on task.task_name = tr.task_name
        WHERE 1 = 1
        <if test="machine_strid != null and machine_strid != ''">
            and m.machine_strid = #{machine_strid}
        </if>
        <if test="order_num != null and order_num != ''">
            and mo.order_num = #{order_num}
        </if>
        <if test="nameplate != null and nameplate != ''">
            and m.nameplate = #{nameplate}
        </if>
        <if test="install_status != null and install_status != ''">
            <if test="install_status == 1">
                and tr.status = 6
            </if>
            <if test="install_status == 2">
                and tr.status != 6
            </if>
        </if>
        <if test="task_name != null and task_name != ''">
            and tr.task_name = #{task_name}
        </if>
        <if test="machine_type != null and machine_type != ''">
            and m.machine_type = #{machine_type}
        </if>
        <!-- 查询 建立时间plan_time在传入的参数 query_start_time 和 query_finish_time 之间的订单 -->
        <if test="query_start_time!=null and query_start_time != '' ">
            and DATE_FORMAT(tp.plan_time,'%Y-%m-%d') &gt;= #{query_start_time}
        </if>
        <if test="query_finish_time!=null and query_finish_time != '' ">
            and DATE_FORMAT(tp.plan_time,'%Y-%m-%d') &lt;= #{query_finish_time}
        </if>
        ORDER By tp.plan_time DESC,tp.update_time DESC
    </select>
    <select id="selectTaskRecordByMachineNameplate" resultMap="TaskRecordDetail">
      select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1,m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        tp.id task_plan_id,tp.*

        from task_record tr
        join task_plan tp on tp.task_record_id = tr.id
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id

        where m.nameplate = #{namePlate}
    </select>

    <select id="selectTaskRecordByNamePlate" resultMap="TaskRecordDetail">
       select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1,m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*,
        tp.id task_plan_id,tp.*

        from task_record tr
        join task_plan tp on tp.task_record_id = tr.id
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        join order_loading_list oll on oll.order_id = mo.id

        join task on task.task_name = tr.task_name
        join install_group  on install_group.id = task.group_id
        join user on user.group_id = install_group.id
        where m.nameplate = #{namePlate}
    </select>

    <select id="selectTaskRecordByNamePlateAndAccount" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1,m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*,
        tp.id task_plan_id,tp.*

        from task_record tr
        join task_plan tp on tp.task_record_id = tr.id
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        join order_loading_list oll on oll.order_id = mo.id

        join task on task.task_name = tr.task_name
        join install_group  on install_group.id = task.group_id
        join user on user.group_id = install_group.id
        where m.nameplate = #{namePlate}
        and  tr.status !=1 and tr.status !=6
        and tp.user_id = (select id from user where user.account=#{account})
    </select>

    <select id="selectUnPlannedTaskRecordByNamePlateAndAccount" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1,m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*,
        tp.id task_plan_id,tp.*

        from task_record tr
        join task_plan tp on tp.task_record_id = tr.id
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        join order_loading_list oll on oll.order_id = mo.id

        join task on task.task_name = tr.task_name
        join install_group  on install_group.id = task.group_id
        join user on user.group_id = install_group.id
        where m.nameplate = #{namePlate}
        and tr.status !=1 and tr.status !=6
        and m.status='1'
        and tp.user_id = (select id from user where user.account=#{account})
    </select>

    <select id="selectUnplannedTaskRecordByAccount" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1,m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*,
        tp.id task_plan_id,tp.*

        from task_record tr
        join task_plan tp on tp.task_record_id = tr.id
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        join order_loading_list oll on oll.order_id = mo.id

        join task on task.task_name = tr.task_name
        join install_group  on install_group.id = task.group_id
        join user  on user.group_id = install_group.id

        where m.status='1' and user.account=#{account};
    </select>
    <select id="selectQATaskRecordDetailByAccountAndNamePlate" resultMap="TaskRecordDetail">
        select
        tr.id, tr.task_name, tr.process_record_id, tr.node_key, tr.leader, tr.worker_list, tr.status taskRecord_status, tr.install_begin_time, tr.install_end_time,tr.quality_begin_time, tr.quality_end_time,
        pr.id process_record_id_in_association, pr.*,
        m.id machine_id1, m.status machine_status, m.*,
        mo.id machine_order_id, mo.status machineOrder_status, mo.machine_type mo_machine_type, mo.*,
        oll.id order_loading_list_id,oll.*
        from task_record tr
        join process_record pr on tr.process_record_id = pr.id
        join machine m on m.id = pr.machine_id
        join machine_order mo on mo.id = m.order_id
        left join order_loading_list oll on oll.order_id =mo.id

        join task on task.task_name = tr.task_name
        join user on user.id = task.quality_user_id
        where user.account = #{account}
        and m.nameplate = #{namePlate}
      -- 4:安装完成，5:质检中， 8:质检异常
        and (tr.status=4 or tr.status = 5 or tr.status=8);
    </select>

    <select id="getExpiredTaskStatistics" resultMap="TaskRecordExpiredMap">
        SELECT COUNT(*) AS expired_count,v.`status`,YEAR(plan_time) AS date_year,MONTH(plan_time) AS date_month,
        DAY(plan_time) AS date_day
        FROM
        (
        SELECT tr.*,tp.plan_time FROM task_record tr
        LEFT JOIN task_plan tp ON tr.id=tp.task_record_id
        ) v
        WHERE !ISNULL(plan_time) AND ((ISNULL(install_end_time) AND CURRENT_DATE >DATE(plan_time)) OR (!ISNULL(install_end_time) AND DATE(install_end_time)>DATE(plan_time)))
        GROUP BY date_year
        <!--TODO AND install_end_time>plan_time AND `status`=6-->

        <if test="mode == 1">
            ,date_month
        </if>
        <if test="mode == 2">
            ,date_month,date_day
        </if>
    </select>

    <select id="selectTaskReports" resultMap="TaskReportMap">
        SELECT
        tr.*, m.nameplate,
        mo.order_num
        FROM
        task_record tr
        RIGHT JOIN process_record pr ON tr.process_record_id = pr.id
        RIGHT JOIN machine m ON m.id = pr.machine_id
        RIGHT JOIN machine_order mo ON mo.id = m.order_id
        WHERE
        tr.task_name = #{task_name}
        AND DATE_FORMAT(install_begin_time, '%Y-%m-%d') &gt;= #{install_start_time}
        <if test="install_finish_time!=null and install_finish_time != '' ">
            AND DATE_FORMAT(install_begin_time, '%Y-%m-%d') &lt;= #{install_finish_time}
        </if>
        ORDER BY
        order_num DESC,
        install_begin_time;

    </select>

    <select id="selectMachineOrderStructureTable" resultMap="TaskRecordDetail">
        SELECT
        mo.create_time,
        mo.order_num,
        mo.sellman,
        mo.needle_num,
        mo.head_num,
        mo.head_distance,
        mo.x_distance,
        mo.y_distance,
        mo.machine_num,
        mo.machine_head_style,
        mo.plan_ship_date,
        od.electric_trim,
        od.axle_jump,
        tr.id,
        tr.task_name,
        tr.install_end_time,
        (  m.nameplate),
        m.machine_framework_create_time,
        m.machine_strid,
        mt.id machineTypeID,
        mt.`name`
        FROM
        task_record tr
        JOIN process_record pr ON tr.process_record_id = pr.id
        JOIN machine m ON m.id = pr.machine_id
        JOIN machine_order mo ON mo.id = m.order_id
        JOIN order_detail od on od.id = mo.order_detail_id
        JOIN machine_type mt ON mo.machine_type = mt.id
        WHERE
        1=1
--         测试调试 完成，则表示机器安装完成，不用管后面工序。 -->
--         and tr.task_name = '测试调试'  --改了， 所有工序都要看
        <if test="queryStartTimePlanShipDate!=null and queryStartTimePlanShipDate != '' ">
            and DATE_FORMAT(mo.plan_ship_date,'%Y-%m-%d') &gt;= #{queryStartTimePlanShipDate}
        </if>
        <if test="queryFinishTimePlanShipDate !=null and queryFinishTimePlanShipDate != '' ">
            and DATE_FORMAT(mo.plan_ship_date,'%Y-%m-%d') &lt;= #{queryFinishTimePlanShipDate}
        </if>

        <if test="orderNum != null and orderNum != ''">
            and mo.order_num like CONCAT('%','${orderNum}','%' )
        </if>
        <if test="sellMan != null and sellMan != ''">
            and mo.sellman like CONCAT('%','${sellMan}','%' )
        </if>

        <if test="machineType != null and machineType != ''">
            <if test="machineType ==  ''">
                and mt.name = #{machineType}
            </if>
        </if>

        --  机器安装是否完成
        <if test="machineFinishStatus != null and machineFinishStatus != ''">
            <choose>
                <when test= "machineFinishStatus == 4 ">
                    and tr.status = #{machineFinishStatus}
                </when>
                <otherwise>
                    --  传入的状态不为4，表示查询未完成的机器
                    and tr.status != '4'
                </otherwise>
            </choose>
        </if>

        <if test="electricTrim != null and electricTrim != ''">
          and od.electric_trim like CONCAT('%','${electricTrim}','%' )
        </if>

        <if test="needleNum != null and needleNum != ''">
            and mo.needle_num = #{needleNum}
        </if>
        <if test="headNum != null and headNum != ''">
            and mo.head_num = #{headNum}
        </if>
        ORDER BY mo.plan_ship_date
    </select>

</mapper>
